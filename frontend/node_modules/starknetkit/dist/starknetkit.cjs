"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const g=require("./core-aa9478e0.cjs"),r=require("./Modal-ff3fe1a4.cjs"),$=require("./trpc-ce4d5eaf.cjs"),c=require("./index-03d92f44.cjs");require("starknet");const m=require("./connector-4a5a7f22.cjs"),D=require("./argentX.cjs"),E=require("./braavosMobile.cjs"),I=require("./braavos.cjs"),W=require("./fordefi.cjs"),k=require("./keplr.cjs"),b=require("./metamask.cjs");require("./index-87ef0ae5.cjs");const F=()=>{const a=navigator.userAgent.toLowerCase(),s=/android|webos|iphone|ipad|ipod|blackberry|windows phone/.test(a),o="ontouchstart"in window||navigator.maxTouchPoints>0,y=window.innerWidth<=768;return s&&(o||y)},R=()=>typeof window<"u"?/^((?!chrome|android).)*safari/i.test(navigator.userAgent):!1,T=({argentMobileOptions:a,webWalletUrl:s})=>{const o=[];return o.push(new D.ArgentX),R()||(o.push(new I.Braavos),b.MetaMask.isWalletInjected()&&o.push(new b.MetaMask),W.Fordefi.isWalletInjected()&&o.push(new W.Fordefi),k.Keplr.isWalletInjected()&&o.push(new k.Keplr)),F()&&o.push(new E.BraavosMobileBaseConnector),o},U=a=>({starknetkitConnectModal:async()=>await M({...a,skipEmit:!0,resultType:void 0})});let n=null;const M=async({modalMode:a="canAsk",storeVersion:s=c.getStoreVersionFromBrowser(),modalTheme:o,dappName:y,resultType:C="wallet",skipEmit:L=!1,...i})=>{const{webWalletUrl:v=$.DEFAULT_WEBWALLET_URL,argentMobileOptions:q}=i,{connectors:u}=i;n=null;const w=!u||u.length===0?T({argentMobileOptions:q,webWalletUrl:v}):u;L&&w?.map(e=>{c.isCompoundConnector(e)&&"connector"in e&&"_options"in e.connector&&(e.connector._options.shouldEmit=!1)});const f=localStorage.getItem("starknetLastConnectedWallet");if(a==="neverAsk")try{const e=c.findConnectorById(w,f);let d=null;return e&&C==="wallet"&&(d=await e.connect({onlyQRCode:!0})),{connector:e,wallet:e?.wallet??null,connectorData:d}}catch(e){throw m.removeStarknetLastConnectedWallet(),new Error(e)}const h=await g.main.getAvailableWallets(i);if(a==="canAsk"&&f&&((await g.main.getAuthorizedWallets(i)).find(t=>t.id===f)??h.length===1?h[0]:void 0)){const t=c.findConnectorById(w,f);let l=null;return C==="wallet"&&(l=await t?.connect({onlyQRCode:!0})??null),t&&(n=t),{connector:n,connectorData:l,wallet:t?.wallet??null}}const S=(await g.main.getDiscoveryWallets(i)).map(e=>e.id.toLowerCase()==="argentx"?{...e,name:"Ready Wallet (formerly Argent)"}:e),A=c.mapModalWallets({availableConnectors:w,installedWallets:h,discoveryWallets:S,storeVersion:s,customOrder:u?u?.length>0:!1});return new Promise((e,d)=>{const t=new r.Modal({target:r.getModalTarget(),props:{dappName:y,callback:async(l,B=!1)=>{try{if(!l)throw new Error("Connector error");if(t.$set({selectedWallet:l}),!l.installed){t.$set({layout:r.Layout.download});return}if(n=c.extractConnector(l.connector,B),C==="wallet"){n instanceof c.ArgentMobileBaseConnector?t.$set({layout:r.Layout.qrCode}):t.$set({layout:r.Layout.connecting});const p=await n?.connect({onlyQRCode:!0})??null;n!==null&&m.setStarknetLastConnectedWallet(n.id),e({connector:n,connectorData:p,wallet:n?.wallet??null}),t.$set({layout:r.Layout.success}),setTimeout(()=>t.$destroy(),500)}else e({connector:n,wallet:null,connectorData:null}),t.$destroy()}catch(p){[r.Layout.connecting,r.Layout.qrCode].includes(t.getLayout())?t.$set({layout:r.Layout.loginFailure}):d(p)}},theme:o==="system"?null:o??null,modalWallets:A}})})},j=()=>n?n.wallet:null,_=async(a={})=>(m.removeStarknetLastConnectedWallet(),n&&await n.disconnect(),n=null,g.main.disconnect(a));exports.connect=M;exports.disconnect=_;exports.getSelectedConnectorWallet=j;exports.useStarknetkitConnectModal=U;
