var x = Object.defineProperty;
var O = (s, f, o) => f in s ? x(s, f, { enumerable: !0, configurable: !0, writable: !0, value: o }) : s[f] = o;
var m = (s, f, o) => (O(s, typeof f != "symbol" ? f + "" : f, o), o);
import "starknet";
const A = {
  ACCOUNTS: "accounts"
};
class S extends Error {
  constructor() {
    super(...arguments);
    m(this, "name", "ConnectorNotConnectedError");
    m(this, "message", "Connector not connected");
  }
}
class R extends Error {
  constructor() {
    super(...arguments);
    m(this, "name", "ConnectorNotFoundError");
    m(this, "message", "Connector not found");
  }
}
class T extends Error {
  constructor() {
    super(...arguments);
    m(this, "name", "UserRejectedRequestError");
    m(this, "message", "User rejected request");
  }
}
const U = (s) => {
  localStorage.setItem("starknetLastConnectedWallet", s);
}, W = () => {
  localStorage.removeItem("starknetLastConnectedWallet");
};
var q = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function L(s) {
  return s && s.__esModule && Object.prototype.hasOwnProperty.call(s, "default") ? s.default : s;
}
function F(s) {
  if (s.__esModule)
    return s;
  var f = s.default;
  if (typeof f == "function") {
    var o = function v() {
      return this instanceof v ? Reflect.construct(f, arguments, this.constructor) : f.apply(this, arguments);
    };
    o.prototype = f.prototype;
  } else
    o = {};
  return Object.defineProperty(o, "__esModule", { value: !0 }), Object.keys(s).forEach(function(v) {
    var g = Object.getOwnPropertyDescriptor(s, v);
    Object.defineProperty(o, v, g.get ? g : {
      enumerable: !0,
      get: function() {
        return s[v];
      }
    });
  }), o;
}
var E = { exports: {} };
(function(s) {
  var f = Object.prototype.hasOwnProperty, o = "~";
  function v() {
  }
  Object.create && (v.prototype = /* @__PURE__ */ Object.create(null), new v().__proto__ || (o = !1));
  function g(c, t, n) {
    this.fn = c, this.context = t, this.once = n || !1;
  }
  function C(c, t, n, r, p) {
    if (typeof n != "function")
      throw new TypeError("The listener must be a function");
    var l = new g(n, r || c, p), i = o ? o + t : t;
    return c._events[i] ? c._events[i].fn ? c._events[i] = [c._events[i], l] : c._events[i].push(l) : (c._events[i] = l, c._eventsCount++), c;
  }
  function b(c, t) {
    --c._eventsCount === 0 ? c._events = new v() : delete c._events[t];
  }
  function u() {
    this._events = new v(), this._eventsCount = 0;
  }
  u.prototype.eventNames = function() {
    var t = [], n, r;
    if (this._eventsCount === 0)
      return t;
    for (r in n = this._events)
      f.call(n, r) && t.push(o ? r.slice(1) : r);
    return Object.getOwnPropertySymbols ? t.concat(Object.getOwnPropertySymbols(n)) : t;
  }, u.prototype.listeners = function(t) {
    var n = o ? o + t : t, r = this._events[n];
    if (!r)
      return [];
    if (r.fn)
      return [r.fn];
    for (var p = 0, l = r.length, i = new Array(l); p < l; p++)
      i[p] = r[p].fn;
    return i;
  }, u.prototype.listenerCount = function(t) {
    var n = o ? o + t : t, r = this._events[n];
    return r ? r.fn ? 1 : r.length : 0;
  }, u.prototype.emit = function(t, n, r, p, l, i) {
    var h = o ? o + t : t;
    if (!this._events[h])
      return !1;
    var e = this._events[h], d = arguments.length, y, a;
    if (e.fn) {
      switch (e.once && this.removeListener(t, e.fn, void 0, !0), d) {
        case 1:
          return e.fn.call(e.context), !0;
        case 2:
          return e.fn.call(e.context, n), !0;
        case 3:
          return e.fn.call(e.context, n, r), !0;
        case 4:
          return e.fn.call(e.context, n, r, p), !0;
        case 5:
          return e.fn.call(e.context, n, r, p, l), !0;
        case 6:
          return e.fn.call(e.context, n, r, p, l, i), !0;
      }
      for (a = 1, y = new Array(d - 1); a < d; a++)
        y[a - 1] = arguments[a];
      e.fn.apply(e.context, y);
    } else {
      var w = e.length, _;
      for (a = 0; a < w; a++)
        switch (e[a].once && this.removeListener(t, e[a].fn, void 0, !0), d) {
          case 1:
            e[a].fn.call(e[a].context);
            break;
          case 2:
            e[a].fn.call(e[a].context, n);
            break;
          case 3:
            e[a].fn.call(e[a].context, n, r);
            break;
          case 4:
            e[a].fn.call(e[a].context, n, r, p);
            break;
          default:
            if (!y)
              for (_ = 1, y = new Array(d - 1); _ < d; _++)
                y[_ - 1] = arguments[_];
            e[a].fn.apply(e[a].context, y);
        }
    }
    return !0;
  }, u.prototype.on = function(t, n, r) {
    return C(this, t, n, r, !1);
  }, u.prototype.once = function(t, n, r) {
    return C(this, t, n, r, !0);
  }, u.prototype.removeListener = function(t, n, r, p) {
    var l = o ? o + t : t;
    if (!this._events[l])
      return this;
    if (!n)
      return b(this, l), this;
    var i = this._events[l];
    if (i.fn)
      i.fn === n && (!p || i.once) && (!r || i.context === r) && b(this, l);
    else {
      for (var h = 0, e = [], d = i.length; h < d; h++)
        (i[h].fn !== n || p && !i[h].once || r && i[h].context !== r) && e.push(i[h]);
      e.length ? this._events[l] = e.length === 1 ? e[0] : e : b(this, l);
    }
    return this;
  }, u.prototype.removeAllListeners = function(t) {
    var n;
    return t ? (n = o ? o + t : t, this._events[n] && b(this, n)) : (this._events = new v(), this._eventsCount = 0), this;
  }, u.prototype.off = u.prototype.removeListener, u.prototype.addListener = u.prototype.on, u.prefixed = o, u.EventEmitter = u, s.exports = u;
})(E);
var j = E.exports;
const N = /* @__PURE__ */ L(j);
class M extends N {
  /** Handle starknet-react type compatibility */
  eventNames() {
    return ["change", "connect", "disconnect"];
  }
}
export {
  M as C,
  A as P,
  T as U,
  S as a,
  R as b,
  q as c,
  L as d,
  F as g,
  W as r,
  U as s
};
