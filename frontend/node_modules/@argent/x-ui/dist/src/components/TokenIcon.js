import { jsx as n } from "react/jsx-runtime";
import { getColor as u, generateAvatarImage as m } from "@argent/x-shared";
import { Square as f, Image as p, Circle as a } from "@chakra-ui/react";
import { isEmpty as g } from "lodash-es";
import "./Typography.js";
import { B1 as h } from "./typography.generated.js";
function x(o) {
  return l(o).src;
}
function l({ name: o, url: r, iconUrl: e, image: i }) {
  const t = r || e || i;
  if (t && !g(t))
    return {
      src: t
    };
  const c = u(o);
  return {
    src: m(o, { background: c }),
    rounded: "full"
  };
}
const C = ({ name: o, url: r, iconUrl: e, image: i, size: t, ...c }) => {
  const { src: d, rounded: s } = l({
    url: r,
    iconUrl: e,
    image: i,
    name: o
  });
  return /* @__PURE__ */ n(f, { position: "relative", overflow: "hidden", size: t, rounded: s, ...c, children: /* @__PURE__ */ n(p, { position: "absolute", left: 0, right: 0, top: 0, bottom: 0, alt: o, src: d }) });
}, U = ({ fontSize: o, ...r }) => /* @__PURE__ */ n(a, { position: "relative", overflow: "hidden", bgColor: "text-secondary", ...r, children: /* @__PURE__ */ n(h, { lineHeight: 1, fontSize: o, children: "?" }) });
export {
  C as TokenIcon,
  U as UnknownTokenIcon,
  x as getTokenIconUrl,
  l as getTokenIconUrlAndRounded
};
