import { jsx as e, jsxs as l } from "react/jsx-runtime";
import { AlertDialog as u, AlertDialogOverlay as g, AlertDialogContent as D, AlertDialogBody as A, VStack as x, AlertDialogFooter as C, Button as r } from "@chakra-ui/react";
import { isFunction as a } from "lodash-es";
import { useRef as k } from "react";
import "./Typography.js";
import { H4 as w, P3 as y } from "./typography.generated.js";
const B = ({ title: m, onDestroy: o, destroyTitle: d = "Delete", onCancel: i, cancelTitle: s = "Cancel", onConfirm: t, confirmTitle: h = "OK", message: c, children: p, ...f }) => {
  const n = k(null);
  return /* @__PURE__ */ e(u, { onClose: i, leastDestructiveRef: n, isCentered: !0, ...f, children: /* @__PURE__ */ e(g, { bg: "black.50", children: /* @__PURE__ */ l(D, { p: 5, color: "text-primary", bgColor: "surface-elevated", rounded: "2xl", w: 280, children: [
    /* @__PURE__ */ e(A, { p: 0, children: /* @__PURE__ */ l(x, { textAlign: "center", spacing: 2, children: [
      /* @__PURE__ */ e(w, { children: m }),
      c && /* @__PURE__ */ e(y, { children: c }),
      p
    ] }) }),
    /* @__PURE__ */ l(C, { flexDirection: "column", gap: 2, p: 0, mt: 6, children: [
      a(o) && /* @__PURE__ */ e(r, { colorScheme: "danger", size: "sm", w: "full", onClick: o, children: d }),
      a(t) && /* @__PURE__ */ e(r, { colorScheme: "primary", size: "sm", w: "full", onClick: t, children: h }),
      /* @__PURE__ */ e(r, { ref: n, colorScheme: "secondary", size: "sm", w: "full", onClick: i, children: s })
    ] })
  ] }) }) });
};
export {
  B as AlertDialog
};
