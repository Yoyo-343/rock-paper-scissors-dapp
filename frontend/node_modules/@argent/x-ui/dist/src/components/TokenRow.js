import { jsxs as c, jsx as r } from "react/jsx-runtime";
import { bigDecimal as s, isEqualAddress as t, ETH_TOKEN_ADDRESS as d, prettifyTokenNumber as u, prettifyCurrencyValue as f } from "@argent/x-shared";
import { Flex as i } from "@chakra-ui/react";
import { TokenIcon as b } from "./TokenIcon.js";
import "./Typography.js";
import { H5 as p, P3 as y, P4 as a } from "./typography.generated.js";
function T({ onClick: m, token: e, iconSize: n = "10", ...o }) {
  const l = s.formatUnits({
    value: BigInt(e.balance ?? 0),
    decimals: e.decimals ?? 18
  });
  return /* @__PURE__ */ c(i, { p: "4", gap: "3", cursor: "pointer", bg: "surface-elevated", borderRadius: "lg", _hover: {
    bg: "surface-elevated-web"
  }, ...o, onClick: () => m(e), children: [
    /* @__PURE__ */ r(b, { iconUrl: e.iconUrl, name: e.name || "", size: n, borderRadius: "50%" }),
    /* @__PURE__ */ c(i, { flexDirection: "column", flex: "1", justifyContent: "center", children: [
      /* @__PURE__ */ r(p, { children: t(e.address, d) ? "Ethereum" : e.name }),
      e.symbol && /* @__PURE__ */ r(y, { color: "text-secondary", children: e.symbol })
    ] }),
    /* @__PURE__ */ c(i, { flexDirection: "column", alignItems: "flex-end", children: [
      Number(e.balance) > 0 && l && /* @__PURE__ */ r(a, { fontWeight: "bold", fontSize: "sm", gap: "0.5", children: u(l, l.length < 12 ? { minDecimalPlaces: 4, maxDecimalPlaces: 6 } : { minDecimalPlaces: 4, maxDecimalPlaces: 12 }) }),
      Number(e.currencyValue) > 0 && e.currencyValue && /* @__PURE__ */ r(a, { fontWeight: "bold", color: "text-secondary-web", children: f(e.currencyValue, e.currencySymbol) })
    ] })
  ] });
}
export {
  T as TokenRow
};
