import { jsx as r, jsxs as l } from "react/jsx-runtime";
import { Flex as o, Link as s, Button as m } from "@chakra-ui/react";
import { DappIcon as d } from "./DappIcon.js";
import "./Typography.js";
import { useDappId as f } from "../providers/DappProvider.js";
import { H5 as h, P4 as w } from "./typography.generated.js";
const U = ({ dappId: n, networkId: u, onDisconnect: t, iconSize: i = 8, fallbackName: p, children: c, ...a }) => {
  const e = f(n);
  return /* @__PURE__ */ r(o, { px: 4, py: 3.5, minHeight: 18, rounded: "xl", w: "full", bgColor: "surface-elevated", justifyContent: "space-between", alignItems: "center", ...a, children: /* @__PURE__ */ l(o, { gap: 3, alignItems: "center", w: "full", children: [
    /* @__PURE__ */ r(d, { size: i, dappId: n }),
    /* @__PURE__ */ l(o, { gap: 0.5, overflow: "hidden", direction: "column", children: [
      /* @__PURE__ */ r(h, { textOverflow: "ellipsis", overflow: "hidden", whiteSpace: "nowrap", children: (e == null ? void 0 : e.name) || p || "Unknown dapp" }),
      (e == null ? void 0 : e.dappUrl) && /* @__PURE__ */ r(w, { as: s, isExternal: !0, href: e.dappUrl, color: "text-secondary", textOverflow: "ellipsis", overflow: "hidden", whiteSpace: "nowrap", children: e.dappUrl })
    ] }),
    /* @__PURE__ */ l(o, { gap: 1, alignItems: "center", ml: "auto", children: [
      t && /* @__PURE__ */ r(m, { colorScheme: "primary", size: "small", onClick: t, children: "Disconnect" }),
      c
    ] })
  ] }) });
};
export {
  U as DappRow
};
