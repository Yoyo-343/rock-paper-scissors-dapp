import { jsxs as t, jsx as o, Fragment as f } from "react/jsx-runtime";
import { entryPointToHumanReadable as x, formatTruncatedAddress as m } from "@argent/x-shared";
import { useColorMode as C, Box as c, Accordion as k, AccordionItem as w, AccordionButton as A, AccordionPanel as T, Divider as W, Flex as b } from "@chakra-ui/react";
import { useMemo as v } from "react";
import { CallData as D, num as R } from "starknet";
import { CopyTooltip as _ } from "../CopyTooltip.js";
import { P3 as i } from "../typography.generated.js";
const E = ({ transactions: r, type: g = "INVOKE_FUNCTION" }) => {
  const { colorMode: a } = C(), e = v(() => a === "dark", [a]);
  return /* @__PURE__ */ t(c, { borderRadius: "xl", w: "100%", children: [
    /* @__PURE__ */ o(c, { backgroundColor: e ? "neutrals.700" : "gray.50", px: "3", py: "2.5", borderTopRadius: "xl", children: /* @__PURE__ */ o(i, { fontWeight: "bold", color: e ? "neutrals.100" : "black", children: "Actions" }) }),
    /* @__PURE__ */ o(k, { allowToggle: !0, backgroundColor: e ? "neutrals.300" : "white", borderBottomRadius: "xl", children: r == null ? void 0 : r.map((l, n) => {
      var p;
      return /* @__PURE__ */ o(w, { border: "none", isDisabled: !l.calldata || ((p = l.calldata) == null ? void 0 : p.length) === 0, children: ({ isDisabled: s, isExpanded: y }) => {
        var h;
        return /* @__PURE__ */ t(f, { children: [
          /* @__PURE__ */ o("h2", { children: /* @__PURE__ */ t(
            A,
            {
              display: "flex",
              color: "text-primary",
              width: "100%",
              justifyContent: "space-between",
              outline: "none",
              px: "3",
              pb: n !== r.length - 1 ? "3" : "3.5",
              _expanded: {
                backgroundColor: e ? "neutrals.700" : "gray.50",
                pb: "3.5"
              },
              disabled: !l.calldata || ((h = l.calldata) == null ? void 0 : h.length) === 0,
              _disabled: {
                cursor: "auto",
                opacity: 1
              },
              _hover: {
                backgroundColor: s ? "" : e ? "neutrals.700" : "gray.50",
                borderBottomRadius: n === r.length - 1 && !y ? "xl" : "0"
              },
              children: [
                /* @__PURE__ */ o(i, { fontWeight: "bold", children: g === "DEPLOY_ACCOUNT" && r.length === 1 ? "Activate account" : x(l.entrypoint) }),
                /* @__PURE__ */ o(i, { fontWeight: "bold", children: m(l.contractAddress) })
              ]
            }
          ) }),
          /* @__PURE__ */ t(T, { backgroundColor: e ? "neutrals.700" : "gray.50", borderBottomRadius: n === r.length - 1 ? "xl" : "0", px: "3", pb: "0", children: [
            /* @__PURE__ */ o(W, { color: "black", opacity: "1" }),
            /* @__PURE__ */ o(b, { flexDirection: "column", gap: "12px", py: "3.5", children: D.toCalldata(l.calldata).map((d, u) => /* @__PURE__ */ t(b, { justifyContent: "space-between", gap: "2", children: [
              /* @__PURE__ */ t(i, { fontWeight: "bold", color: "text-primary", children: [
                "Calldata ",
                u + 1
              ] }),
              /* @__PURE__ */ o(_, { copyValue: d, prompt: d, children: /* @__PURE__ */ o(c, { _hover: {
                backgroundColor: e ? "neutrals.700" : "gray.50",
                color: "text-primary",
                cursor: "pointer"
              }, color: "text-primary", whiteSpace: "nowrap", textOverflow: "ellipsis", overflow: "hidden", minWidth: "0", children: /* @__PURE__ */ o(i, { fontWeight: "bold", maxWidth: "70%", children: R.isHex(d) ? m(d) : d }) }) })
            ] }, u)) })
          ] })
        ] });
      } }, n);
    }) })
  ] });
};
export {
  E as TransactionActions
};
