import { jsxs as t, jsx as e } from "react/jsx-runtime";
import { useColorMode as f, VStack as b, Flex as l } from "@chakra-ui/react";
import { useMemo as m } from "react";
import "../Typography.js";
import { PrettyAccountAddress as p } from "./PrettyAccountAddress.js";
import { P3 as r } from "../typography.generated.js";
const y = ({ accountName: d, accountAddress: u, networkId: n, networkName: a, to: c, PrettyAccountAddress: i = p }) => {
  const { colorMode: s } = f(), o = m(() => s === "dark", [s]);
  return /* @__PURE__ */ t(b, { w: "100%", borderRadius: "xl", backgroundColor: o ? "neutrals.800" : "white", gap: "3", px: "3", py: "3.5", children: [
    /* @__PURE__ */ t(l, { w: "full", justifyContent: "space-between", alignItems: "flex-end", children: [
      /* @__PURE__ */ e(r, { fontWeight: "bold", color: o ? "neutrals.300" : "black", textAlign: "end", children: "From" }),
      /* @__PURE__ */ e(i, { size: 6, accountAddress: u, accountName: d, networkId: n, bold: !0 })
    ] }),
    c && /* @__PURE__ */ t(l, { w: "full", justifyContent: "space-between", children: [
      /* @__PURE__ */ e(r, { fontWeight: "bold", color: o ? "neutrals.300" : "black", children: "To" }),
      /* @__PURE__ */ e(i, { size: 6, accountAddress: c, networkId: n, bold: !0 })
    ] }),
    /* @__PURE__ */ t(l, { w: "full", justifyContent: "space-between", pb: "1", children: [
      /* @__PURE__ */ e(r, { fontWeight: "bold", color: o ? "neutrals.300" : "black", children: "Network" }),
      /* @__PURE__ */ e(r, { fontWeight: "bold", children: a })
    ] })
  ] });
};
export {
  y as AccountNetworkInfo
};
