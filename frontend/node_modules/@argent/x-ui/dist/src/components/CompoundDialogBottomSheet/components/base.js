import { jsx as t, jsxs as f } from "react/jsx-runtime";
import { Button as d, Flex as c, Box as p, useModalContext as g, SimpleGrid as C } from "@chakra-ui/react";
import { isArray as h } from "lodash-es";
import { useCompoundDialogBottomSheetContext as x } from "../context.js";
import B from "../../icons/ChevronLeftPrimaryIcon.js";
import H from "../../icons/CrossPrimaryIcon.js";
import "../../Typography.js";
import { H5 as k } from "../../typography.generated.js";
function a({ children: o, onClick: n, ...r }) {
  return /* @__PURE__ */ t(d, { zIndex: "10", colorScheme: "transparent", backgroundColor: "icon-background", size: "auto", color: "icon", fontSize: "2xs", minW: "8", minH: "8", ...r, onClick: n, children: o });
}
function S({ onClick: o, ...n }) {
  return /* @__PURE__ */ t(a, { ...n, onClick: o, children: /* @__PURE__ */ t(B, { minW: "3.5", minH: "3.5" }) });
}
function y({ ...o }) {
  const { onClose: n } = g();
  return /* @__PURE__ */ t(a, { ...o, onClick: n, children: /* @__PURE__ */ t(H, { minW: "3.5", minH: "3.5" }) });
}
function L({ children: o, onBackClick: n = () => {
}, withBack: r = !1, withClose: s = !0, leftAligned: e = !1, ...u }) {
  const { mode: l } = x(), i = !e && r, m = s && l === "dialog";
  return /* @__PURE__ */ f(c, { as: "header", justifyContent: "space-between", alignItems: "center", ...u, children: [
    i && /* @__PURE__ */ t(S, { onClick: n, marginRight: m ? "0" : "-8" }),
    /* @__PURE__ */ t(p, { width: "100%", textAlign: e ? "left" : "center", children: /* @__PURE__ */ t(k, { fontSize: i ? "lg" : "md", children: o }) }),
    m && /* @__PURE__ */ t(y, { marginLeft: !e && !r ? "-8" : "auto" })
  ] });
}
function P({ children: o, ...n }) {
  return /* @__PURE__ */ t(C, { as: "footer", gap: "6", columns: h(o) ? o.length : 1, ...n, children: o });
}
function v({ children: o, ...n }) {
  return /* @__PURE__ */ t(c, { direction: "column", ...n, children: o });
}
export {
  v as Content,
  S as DialogBackButton,
  y as DialogCloseButton,
  a as DialogHeaderButton,
  P as Footer,
  L as Header
};
