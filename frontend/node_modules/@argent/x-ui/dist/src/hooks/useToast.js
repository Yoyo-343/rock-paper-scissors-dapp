import { jsx as o, jsxs as u } from "react/jsx-runtime";
import { useToast as f, Flex as m, Text as b } from "@chakra-ui/react";
import { merge as p } from "lodash-es";
import { useCallback as x } from "react";
import * as C from "../components/icons/index.js";
import { L1Bold as I } from "../components/typography.generated.js";
const { WarningCircleSecondaryIcon: s, InfoCirclePrimaryIcon: T, SuccessSecondaryIcon: P, PendingPrimaryIcon: h } = C, k = {
  info: /* @__PURE__ */ o(T, {}),
  warning: /* @__PURE__ */ o(s, {}),
  success: /* @__PURE__ */ o(P, {}),
  error: /* @__PURE__ */ o(s, {}),
  loading: /* @__PURE__ */ o(h, {})
}, i = {
  info: { bg: "surface-info-default", icon: "icon-info" },
  warning: { bg: "surface-elevated", icon: "icon-background-brand" },
  success: { bg: "surface-success-default", icon: "icon-success" },
  error: { bg: "surface-danger-default", icon: "icon-danger" },
  loading: { bg: "surface-elevated", icon: "pending" }
}, L = (n) => {
  const e = f(n);
  return x((a) => {
    const r = p({}, n, a), { title: t, status: c = "info" } = r, d = r.icon || k[c], g = i[c].bg, l = i[c].icon;
    return e({ render: () => /* @__PURE__ */ u(m, { alignItems: "center", p: 3, gap: 3, borderRadius: "lg", backgroundColor: g, children: [
      /* @__PURE__ */ o(b, { fontSize: "2xl", color: l, children: d }),
      /* @__PURE__ */ o(I, { textTransform: "initial", children: t })
    ] }), ...r });
  }, [e, n]);
};
export {
  L as useToast
};
