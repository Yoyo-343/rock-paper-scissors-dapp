import { jsx as r, jsxs as I } from "react/jsx-runtime";
import { isRejectOnChainActivity as C, isUpgradeActivity as A, NativeActivityTypeNative as R } from "@argent/x-shared/simulation";
import { Circle as i, Square as x } from "@chakra-ui/react";
import { groupBy as O, isEmpty as u } from "lodash-es";
import { memo as j, useMemo as v } from "react";
import * as y from "../../../../components/icons/index.js";
import { getActivityDetailsIcon as k } from "./getActivityDetailsIcon.js";
import { SendOrReceiveActivityIcon as b } from "./SendOrReceiveActivityIcon.js";
import N from "../../../../components/icons/CancelCircleSecondaryIcon.js";
import U from "../../../../components/icons/CrossSecondaryIcon.js";
import q from "../../../../components/icons/UpgradeSecondaryIcon.js";
import B from "../../../../components/icons/LegalOldIcon.js";
const D = ({ activity: n, networkId: d, size: o = 10, preferMetaIcon: g = !1, ...c }) => {
  var p;
  const { type: S, status: s, transferSummary: h = [] } = n, { send: m, receive: f } = O(h, (e) => e.sent ? "send" : "receive"), t = v(() => u(m) ? null : (l) => /* @__PURE__ */ r(b, { summaryArray: m, networkId: d, size: o, ...l }), [d, m, o]), a = v(() => u(f) ? null : (l) => /* @__PURE__ */ r(b, { summaryArray: f, networkId: d, size: o, ...l }), [d, f, o]);
  if (s === "failure" || s === "rejected" || s === "cancelled")
    return /* @__PURE__ */ r(i, { size: o, bgColor: "surface-elevated-hover", ...c, children: /* @__PURE__ */ r(N, {}) });
  if (C(n))
    return /* @__PURE__ */ r(i, { size: o, bgColor: "icon-background-brand", ...c, children: /* @__PURE__ */ r(U, {}) });
  if (A(n))
    return /* @__PURE__ */ r(i, { size: o, bgColor: "icon-background-brand", ...c, children: /* @__PURE__ */ r(q, { color: "surface-elevated" }) });
  if (S === R && (g || !(t || a))) {
    const e = (p = n.meta) == null ? void 0 : p.icon;
    if (e && e in y) {
      const l = y[e];
      return /* @__PURE__ */ r(i, { size: o, color: "surface-default", bgColor: "icon-background-brand", ...c, children: /* @__PURE__ */ r(l, {}) });
    }
  }
  if (t && a)
    return /* @__PURE__ */ I(x, { size: o, position: "relative", ...c, children: [
      /* @__PURE__ */ r(t, { size: 6, fontSize: "sm", position: "absolute", left: 0, top: 0 }),
      /* @__PURE__ */ r(a, { size: 6.5, fontSize: "sm", position: "absolute", right: 0, bottom: 0, filter: "drop-shadow(-1px -1px var(--chakra-colors-surface-elevated))" })
    ] });
  if (t)
    return /* @__PURE__ */ r(t, {});
  if (a)
    return /* @__PURE__ */ r(a, {});
  if ("details" in n && !u(n.details)) {
    const e = k(n.details);
    if (e)
      return /* @__PURE__ */ r(i, { size: o, color: "surface-default", bgColor: "icon-background-brand", ...c, children: e });
  }
  return /* @__PURE__ */ r(i, { size: o, bgColor: "surface-elevated-hover", ...c, children: /* @__PURE__ */ r(B, {}) });
}, W = j(D);
export {
  W as ActivityIcon
};
