import { jsx as t, jsxs as c, Fragment as l } from "react/jsx-runtime";
import { isEmpty as y, groupBy as h } from "lodash-es";
import { ActivitySummaryRow as p } from "../row/ActivitySummaryRow.js";
import { ActivitySummaryStack as m } from "./ActivitySummaryStack.js";
import { B3 as v, L1Bold as a } from "../../../../components/typography.generated.js";
const $ = ({ summaryArray: i, networkId: n, hideComponent: o }) => {
  if (y(i))
    return /* @__PURE__ */ t(m, { children: /* @__PURE__ */ t(v, { color: "text-secondary", textAlign: "center", py: 1, children: "No balance change" }) });
  const { send: d, receive: s } = h(i, (e) => e.sent ? "send" : "receive");
  return /* @__PURE__ */ c(m, { children: [
    d && /* @__PURE__ */ c(l, { children: [
      /* @__PURE__ */ t(a, { color: "text-secondary", children: "Send" }),
      d.map((e, r) => /* @__PURE__ */ t(p, { summary: e, networkId: n, hideComponent: o }, `send-${r}-${e.asset.type}`))
    ] }),
    s && /* @__PURE__ */ c(l, { children: [
      /* @__PURE__ */ t(a, { color: "text-secondary", children: "Receive" }),
      s.map((e, r) => /* @__PURE__ */ t(p, { summary: e, networkId: n, hideComponent: o }, `send-${r}-${e.asset.type}`))
    ] })
  ] });
};
export {
  $ as SendAndReceiveActivity
};
