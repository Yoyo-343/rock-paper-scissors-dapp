import { jsx as e, jsxs as g } from "react/jsx-runtime";
import { Flex as x } from "@chakra-ui/react";
import { upperFirst as A } from "lodash-es";
import { useMemo as V } from "react";
import { Hideable as F } from "../Hideable.js";
import { TokenAndAmountValue as v } from "../../properties/ui/TokenAndAmountValue.js";
import { DappValue as D } from "../../properties/ui/DappValue.js";
import { HashValue as k } from "../../properties/ui/HashValue.js";
import { LabelValueStack as T, LabelValueRow as a } from "../../../../components/LabelValue.js";
const z = ({ activity: t, networkId: l, hideComponent: f }) => {
  const { status: o, transaction: c, dapp: u } = t, n = V(() => {
    var p;
    if (!("fees" in t))
      return null;
    const r = (p = t.fees) == null ? void 0 : p.find((b) => b.type === "gas");
    if (!r || !r.actualFee)
      return null;
    const { actualFee: h } = r, { amount: s, fiatAmount: i, tokenAddress: m } = h;
    return s && i && m ? /* @__PURE__ */ e(v, { tokenAddress: m, amount: s, fiatAmount: i, networkId: l }) : null;
  }, [t, l]), d = o === "failure" ? "Reverted" : A(o);
  return /* @__PURE__ */ g(T, { p: 3, rounded: "lg", bg: "surface-elevated", children: [
    u && /* @__PURE__ */ e(a, { label: "Dapp", value: /* @__PURE__ */ e(D, { dapp: u }) }),
    n && /* @__PURE__ */ e(a, { label: "Network fee", value: /* @__PURE__ */ e(x, { ml: "auto", textAlign: "right", alignItems: "center", children: /* @__PURE__ */ e(F, { hideComponent: f, children: n }) }) }),
    /* @__PURE__ */ e(a, { label: "Tx Status", value: d }),
    /* @__PURE__ */ e(a, { label: "Tx Details", value: /* @__PURE__ */ e(k, { hash: c.hash, networkId: l }) })
  ] });
};
export {
  z as ActivityAdditionalDetails
};
