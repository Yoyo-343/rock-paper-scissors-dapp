import { jsx as e } from "react/jsx-runtime";
import { useMemo as o } from "react";
import { AddressProperty as s } from "./AddressProperty.js";
import { AmountProperty as i } from "./AmountProperty.js";
import { CallDataProperty as l } from "./CallDataProperty.js";
import { TextProperty as c } from "./TextProperty.js";
import { TimeStampProperty as n } from "./TimeStampProperty.js";
import { TokenAddressProperty as u } from "./TokenAddressProperty.js";
import { Label as f } from "../../../components/Label.js";
import { LabelValueRow as P } from "../../../components/LabelValue.js";
const w = ({ property: r, networkId: t, hideComponent: a }) => {
  const m = o(() => {
    switch (r.type) {
      case "amount":
        return /* @__PURE__ */ e(i, { property: r, hideComponent: a });
      case "address":
        return /* @__PURE__ */ e(s, { property: r, networkId: t });
      case "token_address":
      case "nft":
        return /* @__PURE__ */ e(u, { property: r, networkId: t });
      case "calldata":
        return /* @__PURE__ */ e(l, { property: r });
      case "text":
        return /* @__PURE__ */ e(c, { property: r });
      case "timestamp":
        return /* @__PURE__ */ e(n, { property: r });
    }
  }, [a, t, r]);
  return /* @__PURE__ */ e(P, { label: /* @__PURE__ */ e(f, { label: r.label }), value: m });
};
export {
  w as TransactionReviewProperty
};
