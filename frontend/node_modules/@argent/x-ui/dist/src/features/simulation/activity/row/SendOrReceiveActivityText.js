import { jsxs as c, Fragment as r, jsx as g } from "react/jsx-runtime";
import { pluralise as p } from "@argent/x-shared";
import { isNftActivitySummary as h, isTokenActivitySummary as x } from "@argent/x-shared/simulation";
import { isEmpty as T, groupBy as a, uniq as d } from "lodash-es";
import { TokenActivitySummaryText as v } from "../icon/TokenActivitySummaryText.js";
import { getAttributes as y } from "./getAttributes.js";
const B = ({ summaryArray: e, networkId: m }) => {
  if (T(e))
    return null;
  const { token: i, nft: o } = a(e, (t) => t.asset.type), n = e.length, l = d(e.map((t) => t.asset.type)).length > 1, { prefix: s } = y(e[0]);
  if (l || (i == null ? void 0 : i.length) > 1)
    return `${s}${p(n, "asset")}`;
  if ((o == null ? void 0 : o.length) > 1)
    return `${s}${p(n, "NFT")}`;
  if ((o == null ? void 0 : o.length) === 1) {
    const [t] = e;
    if (h(t)) {
      const f = t.asset.amount || 1, u = t.asset.collectionName || "NFT";
      return /* @__PURE__ */ c(r, { children: [
        s,
        f,
        " ",
        u
      ] });
    }
  }
  if ((i == null ? void 0 : i.length) === 1) {
    const [t] = e;
    if (x(t))
      return /* @__PURE__ */ c(r, { children: [
        s,
        /* @__PURE__ */ g(v, { summary: t, networkId: m })
      ] });
  }
};
export {
  B as SendOrReceiveActivityText
};
