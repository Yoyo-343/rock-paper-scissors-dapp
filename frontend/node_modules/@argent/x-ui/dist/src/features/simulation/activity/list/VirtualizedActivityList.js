import { jsx as c } from "react/jsx-runtime";
import { forwardRef as b, useMemo as i } from "react";
import { Virtuoso as z } from "react-virtuoso";
import { ActivityListSubtitlePending as G } from "./ActivityListSubtitlePending.js";
import { ITEM_TYPE as N } from "./types.js";
import { getActivityItemData as P } from "./utils/getActivityItemData.js";
import { getGroupedItemData as T } from "./utils/getGroupedItemData.js";
import { VirtualizedActivityListItem as _ } from "./VirtualizedActivityListItem.js";
import { getPartitionedActivities as B } from "./utils/getPartitionedActivities.js";
import { getGroupedActivitiesByDate as M } from "./utils/getGroupedActivitiesByDate.js";
const j = (s, e, r) => /* @__PURE__ */ c(_, { data: e, ...r }), F = b(({ activities: s, networkId: e, onActivityClick: r, header: a, footer: d, RowWrapper: l, SubTitleWrapper: p, hideComponent: f, rowProps: g, components: x, ...y }, h) => {
  const L = i(() => ({
    ...x,
    Header: () => a,
    Footer: () => d
  }), [x, a, d]), [t, I] = i(() => B(s), [s]), v = i(() => M(I), [I]), A = i(() => t.length ? /* @__PURE__ */ c(G, { count: t.length }) : null, [t]), E = i(() => {
    const n = [];
    let o = 0, m = 0;
    if (t.length) {
      n.push({
        type: N.SUBTITLE_PENDING,
        index: m++
      });
      const D = P({
        activities: t,
        itemIndex: o
      });
      o = D.itemIndex, n.push(...D.itemData);
    }
    const u = T({
      groupedActivities: v,
      itemIndex: o,
      subtitleIndex: m
    });
    return n.push(...u.itemData), o = u.itemIndex, m = u.subtitleIndex, n;
  }, [v, t]), V = i(() => ({
    RowWrapper: l,
    SubTitleWrapper: p,
    networkId: e,
    onActivityClick: r,
    rowProps: g,
    subtitlePending: A,
    hideComponent: f
  }), [
    l,
    p,
    e,
    r,
    g,
    A,
    f
  ]);
  return /* @__PURE__ */ c(z, { ref: h, data: E, context: V, itemContent: j, components: L, ...y });
});
F.displayName = "VirtualizedActivityList";
export {
  F as VirtualizedActivityList
};
