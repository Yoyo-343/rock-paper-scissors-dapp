import { jsx as e, jsxs as n } from "react/jsx-runtime";
import { prettifyTokenAmount as A, ensureDecimals as k, prettifyCurrencyValue as v, getCurrencySymbol as x } from "@argent/x-shared";
import { Flex as o } from "@chakra-ui/react";
import { Hideable as b } from "../Hideable.js";
import { TokenActivitySummaryIcon as w } from "../icon/TokenActivitySummaryIcon.js";
import { ActivityRowSubtitle as I } from "./ActivityRowSubtitle.js";
import { getAttributes as S } from "./getAttributes.js";
import { useToken as T } from "../../../../providers/TokenProvider.js";
import { UnknownTokenIcon as U } from "../../../../components/TokenIcon.js";
import { B3 as i } from "../../../../components/typography.generated.js";
const E = ({ summary: t, networkId: c, hideComponent: d }) => {
  var a, u;
  const f = t.asset.tokenAddress, r = T({
    networkId: c,
    address: f
  });
  if (!r)
    return /* @__PURE__ */ e(o, { alignItems: "center", w: "full", children: /* @__PURE__ */ n(o, { gap: "2", alignItems: "center", children: [
      /* @__PURE__ */ e(U, { size: 7 }),
      /* @__PURE__ */ e(i, { children: "Unknown token" })
    ] }) });
  const l = t.asset.amount || 0, s = (a = t.asset.fiatAmount) == null ? void 0 : a.currencyAmount, p = ((u = t.asset.fiatAmount) == null ? void 0 : u.currency) ?? "USD", m = A({
    amount: l,
    decimals: k(r.decimals),
    symbol: r.symbol
  }), { color: y, prefix: g } = S(t), h = v(s, x(p));
  return /* @__PURE__ */ n(o, { alignItems: "center", w: "full", children: [
    /* @__PURE__ */ n(o, { gap: "2", alignItems: "center", children: [
      /* @__PURE__ */ e(w, { summary: t, size: 7, networkId: c }),
      /* @__PURE__ */ e(i, { children: r.name })
    ] }),
    /* @__PURE__ */ e(o, { ml: "auto", gap: 1, direction: "column", textAlign: "right", children: /* @__PURE__ */ n(b, { hideComponent: d, children: [
      /* @__PURE__ */ n(i, { color: y, "data-tx-value": l, "data-fe-value": m, children: [
        g,
        m
      ] }),
      s !== void 0 && /* @__PURE__ */ e(I, { children: h })
    ] }) })
  ] });
};
export {
  E as TokenActivitySummaryRow
};
