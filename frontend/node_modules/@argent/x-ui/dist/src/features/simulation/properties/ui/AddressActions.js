import { jsxs as m, jsx as o } from "react/jsx-runtime";
import { Flex as x, Button as l, Tooltip as d } from "@chakra-ui/react";
import { useCallback as u } from "react";
import { useBlockExplorerTitle as h, useBlockExplorerOnOpenAddress as y, useBlockExplorerOnOpenTransaction as f } from "../../../../providers/BlockExplorerProvider.js";
import { CopyTooltip as v } from "../../../../components/CopyTooltip.js";
import * as O from "../../../../components/icons/index.js";
const { CopyPrimaryIcon: b, ExpandIcon: k } = O, B = ({ address: r, networkId: e, isTransaction: t = !1, ...p }) => {
  const i = h(), n = y(), c = f(), a = u(() => t ? void c({ networkId: e, hash: r }) : void n({ networkId: e, address: r }), [
    r,
    n,
    c,
    t,
    e
  ]);
  return /* @__PURE__ */ m(x, { gap: "1", alignItems: "center", opacity: 0, transitionProperty: "common", transitionDuration: "fast", _groupHover: { opacity: 1 }, onClick: (s) => {
    s.stopPropagation();
  }, ...p, children: [
    /* @__PURE__ */ o(v, { copyValue: r, placement: "top", children: /* @__PURE__ */ o(l, { size: "auto", color: "text-secondary", p: 0.5, rounded: "sm", _hover: {
      color: "text-primary",
      bg: "surface-elevated-hover"
    }, children: /* @__PURE__ */ o(b, {}) }) }),
    /* @__PURE__ */ o(d, { label: `View on ${i}`, placement: "top", children: /* @__PURE__ */ o(l, { onClick: a, size: "auto", color: "text-secondary", p: 0.5, rounded: "sm", _hover: {
      color: "text-primary",
      bg: "surface-elevated-hover"
    }, children: /* @__PURE__ */ o(k, {}) }) })
  ] });
};
export {
  B as AddressActions
};
