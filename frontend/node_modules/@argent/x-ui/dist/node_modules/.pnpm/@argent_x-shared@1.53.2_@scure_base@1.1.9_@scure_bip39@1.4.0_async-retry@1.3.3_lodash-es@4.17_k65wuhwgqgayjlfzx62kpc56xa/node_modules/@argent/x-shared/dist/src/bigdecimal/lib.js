const r = (a, i) => ({
  decimals: i,
  value: i >= a.decimals ? a.value * BigInt(10) ** BigInt(i - a.decimals) : a.value / BigInt(10) ** BigInt(a.decimals - i)
}), t = (a, i) => {
  const l = Math.max(a.decimals, i.decimals), [e, n] = [a, i].map((s) => r(s, l));
  return [e.value, n.value, l];
}, d = (a) => (i, l) => {
  const [e, n, s] = t(i, l);
  return {
    decimals: s,
    value: a(e, n, s)
  };
}, c = d((a, i) => a + i), o = d((a, i, l) => {
  if (i === BigInt(0))
    throw new Error("Division by zero is not allowed");
  return a * BigInt(10) ** BigInt(l) / i;
});
export {
  c as add,
  o as div,
  r as toFixedDecimals
};
