"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("zod"),t=require("../../../chains/starknet/address.cjs"),u=require("./defiPositionType.model.cjs"),h=require("../../../utils/schemas.cjs");e.z.object({status:e.z.literal("initialising")}).or(e.z.object({status:e.z.literal("initialised"),balances:e.z.array(e.z.object({tokenAddress:t.addressSchemaArgentBackend,tokenBalance:e.z.string()}))}));const c=e.z.object({id:e.z.number(),address:t.addressSchema,brandColor:e.z.string().optional(),name:e.z.string(),symbol:e.z.string(),decimals:e.z.number(),iconUrl:e.z.string().optional(),sendable:e.z.boolean(),popular:e.z.boolean(),refundable:e.z.boolean(),listed:e.z.boolean(),tradable:e.z.boolean(),category:e.z.union([e.z.literal("tokens"),e.z.literal("currencies"),e.z.literal("savings")]),pricingId:e.z.number().optional(),dappId:e.z.string().optional(),marketData:e.z.object({marketCap:e.z.number(),marketCap24hChange:e.z.number(),dailyVolume:e.z.number(),rank:e.z.number()}).optional(),tags:e.z.array(e.z.string()).optional()});e.z.object({tokens:e.z.array(c)});const d=e.z.object({pricingId:e.z.number(),ethValue:e.z.string(),ccyValue:e.z.string(),ethDayChange:e.z.string(),ccyDayChange:e.z.string()});e.z.object({prices:e.z.array(d)});const n=e.z.object({tokenAddress:t.addressSchemaArgentBackend,principal:e.z.string(),accruedFees:e.z.string(),minPrice:e.z.string(),maxPrice:e.z.string(),currentPrice:e.z.string()}),a=e.z.object({id:e.z.string(),investmentId:e.z.string().optional(),tokenAddress:t.addressSchema.optional(),totalBalances:e.z.record(e.z.string())}),o=a.extend({tokenId:e.z.string(),data:e.z.object({poolFeePercentage:e.z.string(),tickSpacingPercentage:e.z.string().optional(),token0:n,token1:n})});e.z.array(o);const i=a.extend({data:e.z.object({apy:e.z.string(),totalApy:e.z.string()}),investmentId:e.z.string().optional(),totalBalances:e.z.record(e.z.string())});e.z.array(i);const r=a.extend({data:e.z.object({apy:e.z.string().optional(),totalApy:e.z.string().optional(),group:e.z.number().optional(),collateral:e.z.boolean(),debt:e.z.boolean(),lending:e.z.boolean()})});e.z.array(r);const s=a.extend({id:e.z.string(),data:e.z.object({delegatingTo:t.addressSchema}),totalBalances:e.z.record(e.z.string())});e.z.array(s);const z=a.extend({investmentId:e.z.string().optional(),data:e.z.object({stakerInfo:e.z.object({name:e.z.string().optional(),iconUrl:e.z.string().optional(),address:t.addressSchema}),accruedRewards:e.z.string(),stakedAmount:e.z.string(),pendingWithdrawal:e.z.object({amount:e.z.string(),withdrawableAfter:e.z.number()}).optional(),apy:e.z.string().optional(),totalApy:e.z.string().optional()})});e.z.array(z);const l=o.or(r).or(s).or(i).or(z),p=e.z.array(l),g=h.createSchemaWithWarnings({productId:e.z.string().optional(),name:e.z.string(),manageUrl:e.z.string().optional(),type:u.defiPositionTypeSchema,groups:e.z.record(e.z.object({name:e.z.string().optional(),healthRatio:e.z.string().optional()})).optional(),positions:p}),m=e.z.object({dappId:e.z.string(),products:e.z.array(g)});e.z.object({dapps:e.z.array(m)});const b=e.z.object({name:e.z.string().optional(),tokenAddress:t.addressSchema,amount:e.z.string().optional(),claimUrl:e.z.string().optional(),claimStart:e.z.number(),claimEnd:e.z.number().optional()});e.z.object({accountAddress:t.addressSchema,chain:e.z.string(),airdrops:e.z.array(b)});exports.apiAirdropSchema=b;exports.apiCollateralizedDebtPositionSchema=r;exports.apiConcentratedLiquidityPositionSchema=o;exports.apiDefiDecompositionProduct=g;exports.apiDefiDecompositionProducts=p;exports.apiDefiDecompositionSchema=m;exports.apiDefiDecompositionToken=n;exports.apiDefiPositionSchema=l;exports.apiDelegatedTokensSchema=s;exports.apiPriceDetailsSchema=d;exports.apiStakingPositionSchema=i;exports.apiStrkDelegatedStakingSchema=z;exports.apiTokenInfoSchema=c;
