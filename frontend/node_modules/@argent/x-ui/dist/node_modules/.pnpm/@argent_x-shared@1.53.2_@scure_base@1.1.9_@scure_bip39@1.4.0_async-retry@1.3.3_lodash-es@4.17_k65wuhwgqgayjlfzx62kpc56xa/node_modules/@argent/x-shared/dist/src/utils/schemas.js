import { z as r } from "zod";
r.boolean().transform((t) => String(t));
r.string().transform((t) => t === "true");
function o(t) {
  return r.object(t).passthrough().superRefine((n) => {
    const e = Object.keys(t), s = Object.keys(n).filter((i) => !e.includes(i));
    s.length > 0 && `${s.join(", ")}`;
  });
}
function a(t) {
  const n = o(t);
  return Object.assign(n, {
    extend: (e) => o({ ...t, ...e })
  });
}
export {
  a as createSchemaWithWarnings
};
